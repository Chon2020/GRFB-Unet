# GRFB-UNet

## 该项目主要参考以下开源仓库

## 环境配置：
* Python3.6/3.7/3.8
*Pytorch1.10
*Ubuntu或Centos(Windows暂不支持多GPU训练)
*最好使用GPU训练
##详细环境配置：
*numpy==1.21.3
*torch==1.10.0
*torchvision==0.11.1
*Pillow

服务器  进入pyhon环境命令
conda activate py37


## 文件结构：
```
  ├── src: 搭建GRFB-UNet模型代码
  ├── train_utils: 训练、验证以及多GPU训练相关模块
  ├── my_dataset.py: 自定义dataset用于读取TP数据集(盲道分割)
  ├── train.py: 以单GPU为例进行训练
  ├── train_multi_GPU.py: 针对使用多GPU的用户使用
  └── predict.py: 简易的预测脚本，使用训练好的权重进行预测测试

## TP数据集下载地址：

## 训练方法
* 确保提前准备好数据集
* 若要使用单GPU或者CPU训练，直接使用train.py训练脚本
* 若要使用多GPU训练，使用`torchrun --nproc_per_node=8 train_multi_GPU.py`指令,`nproc_per_node`参数为使用GPU数量

## 注意事项
* 在使用训练脚本时，注意要将`--data-path`设置为自己存放`DRIVE`文件夹所在的**根目录**
* 在使用预测脚本时，要将`weights_path`设置为你自己生成的权重路径。
* 使用validation文件时，注意确保你的验证集或者测试集中必须包含每个类别的目标，并且使用时只需要修改`--num-classes`、`--data-path`和`--weights`即可，其他代码尽量不要改动

## 使用GRFB-UNet在TP数据集上训练得到的权重(仅供测试使用)
